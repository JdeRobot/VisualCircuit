FROM jderobot/robotics-applications:dependencies-humble

WORKDIR /

# RoboticsInfrasctructure Repository
ARG ROBOTICS_INFRASTRUCTURE=$ROBOTICS_INFRASTRUCTURE
RUN mkdir -p /opt/jderobot && \
    git clone --depth 1 https://github.com/JdeRobot/RoboticsInfrastructure.git -b $ROBOTICS_INFRASTRUCTURE /opt/jderobot

# create workspace and add Robot packages
RUN mkdir -p /home/ws/src
RUN mv /opt/jderobot/CustomRobots /opt/jderobot/jderobot_drones /home/ws/src/
RUN mv /opt/jderobot/resources /resources

ARG IMAGE_TAG
ENV IMAGE_TAG=${IMAGE_TAG}

# Clone the RoboticsApplicationManager repository into the src folder inside RoboticsAcademy
ARG RAM=$RAM
RUN git clone https://github.com/JdeRobot/RoboticsApplicationManager.git -b $RAM /RoboticsApplicationManager

# copy scripts
RUN mv -t / /opt/jderobot/scripts/.env  /opt/jderobot/scripts/entrypoint.sh /opt/jderobot/scripts/start_vnc.sh  /opt/jderobot/scripts/start_vnc_gpu.sh /opt/jderobot/scripts/kill_all.sh /opt/jderobot/scripts/test/check_device.py /opt/jderobot/scripts/set_dri_name.sh

# give execution permissions
WORKDIR /
RUN chmod +x /start_vnc.sh /kill_all.sh /entrypoint.sh /start_vnc_gpu.sh /set_dri_name.sh

# Bt-Studio
ARG VISUAL_CIRCUIT=$VISUAL_CIRCUIT
RUN git clone --depth 1 https://github.com/JdeRobot/VisualCircuit.git -b $VISUAL_CIRCUIT

# Compiling and sourcing the workspace
WORKDIR /home/ws
RUN /bin/bash -c "source /home/drones_ws/install/setup.bash"
RUN /bin/bash -c "source /home/industrial_ws/install/setup.bash"
RUN /bin/bash -c "source /opt/ros/humble/setup.bash; colcon build --symlink-install"

WORKDIR /VisualCircuit/frontend
RUN npm install --legacy-peer-deps


WORKDIR /VisualCircuit/backend
RUN pip install --upgrade pip && pip install -r requirements.txt

RUN echo "DJANGO_DEBUG=true" >> /VisualCircuit/backend/.env && \
    echo "VISUAL_CIRCUIT_FRONTEND_HOST='http://localhost:4000'" >> /VisualCircuit/backend/.env && \
    echo "DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1" >> /VisualCircuit/backend/.env && \
    echo "DJANGO_SECRET_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" >> /VisualCircuit/backend/.env

# Collect static files
RUN python manage.py collectstatic 

WORKDIR /VisualCircuit
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Django server
EXPOSE 7164

# Manager websocket
EXPOSE 7163

# noVNC Console
EXPOSE 1108

# noVNC Gazebo
EXPOSE 6080

EXPOSE 4000 8080

ENTRYPOINT ["/entrypoint.sh"]
